[test]
name = layer_real_ubuntu_config
description = Test layer creation using real Ubuntu config from testdata

[file]
name = ubuntu_config.json
{"architecture": "amd64", "config": {"Hostname": "", "Domainname": "", "User": "", "AttachStdin": false, "AttachStdout": false, "AttachStderr": false, "Tty": false, "OpenStdin": false, "StdinOnce": false, "Env": ["PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"], "Cmd": ["/bin/bash"], "Image": "sha256:9e8e73ef7ecf9677998352379644674e54a6b3104ae7da6d1204d83a4118826f", "Volumes": null, "WorkingDir": "", "Entrypoint": null, "OnBuild": null, "Labels": {"org.opencontainers.image.ref.name": "ubuntu", "org.opencontainers.image.version": "24.04"}}, "container": "00abb0934f25966f0f238fb3d52ad7e9f927a59b01c43ec79aabf2594fece2f5", "os": "linux"}

[file]
name = hello_app.go
package main

import (
	"fmt"
	"runtime"
)

func main() {
	fmt.Printf("Hello, world from %s %s!\n", runtime.GOOS, runtime.GOARCH)
}

[command]
subcommand = layer
args = --add /app/hello_app.go=hello_app.go --add /config/ubuntu_config.json=ubuntu_config.json --metadata layer_metadata.json output_layer.tar.gz
expect_exit = 0

[assert]
file_exists = output_layer.tar.gz
file_exists = layer_metadata.json
file_valid_gzip = output_layer.tar.gz
file_valid_json = layer_metadata.json
json_field_exists = layer_metadata.json, digest
json_field_exists = layer_metadata.json, size
json_field_exists = layer_metadata.json, mediaType
file_size_gt = output_layer.tar.gz, 500
file_contains = layer_metadata.json, "application/vnd.oci.image.layer.v1.tar+gzip"
