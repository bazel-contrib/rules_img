load("@bazel_skylib//rules:build_test.bzl", "build_test")
load("@rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "img_lib",
    srcs = ["img.go"],
    importpath = "github.com/bazel-contrib/rules_img/img_tool/cmd/img",
    visibility = ["//visibility:private"],
    deps = [
        "//cmd/compress",
        "//cmd/deploy",
        "//cmd/dockersave",
        "//cmd/downloadblob",
        "//cmd/expandtemplate",
        "//cmd/index",
        "//cmd/indexfromocilayout",
        "//cmd/layer",
        "//cmd/layermeta",
        "//cmd/manifest",
        "//cmd/manifestfromocilayout",
        "//cmd/ocilayout",
        "//cmd/push",
        "//cmd/validate",
        "@rules_go//go/runfiles",
    ],
)

go_binary(
    name = "img",
    embed = [":img_lib"],
    pure = "on",
    visibility = ["//visibility:public"],
)

platform_tuples = [
    ("linux", "amd64"),
    ("linux", "arm64"),
    ("darwin", "amd64"),
    ("darwin", "arm64"),
    ("windows", "amd64"),
    ("windows", "arm64"),
]

[
    go_binary(
        name = "img_{}_{}".format(os, arch),
        embed = [":img_lib"],
        goarch = arch,
        goos = os,
        pure = "on",
        visibility = ["//toolchain:__subpackages__"],
    )
    for os, arch in platform_tuples
]

build_test(
    name = "test",
    targets = [":img"],
)
