// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.27.3
// source: pkg/proto/blobcache/blobcache.proto

package blobcache

import (
	v2 "github.com/bazel-contrib/rules_img/img_tool/pkg/proto/remote-apis/build/bazel/remote/execution/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitRequest struct {
	state          protoimpl.MessageState  `protogen:"open.v1"`
	BlobDigests    []*v2.Digest            `protobuf:"bytes,1,rep,name=blob_digests,json=blobDigests,proto3" json:"blob_digests,omitempty"`
	DigestFunction v2.DigestFunction_Value `protobuf:"varint,2,opt,name=digest_function,json=digestFunction,proto3,enum=build.bazel.remote.execution.v2.DigestFunction_Value" json:"digest_function,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CommitRequest) Reset() {
	*x = CommitRequest{}
	mi := &file_pkg_proto_blobcache_blobcache_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitRequest) ProtoMessage() {}

func (x *CommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_blobcache_blobcache_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitRequest.ProtoReflect.Descriptor instead.
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_blobcache_blobcache_proto_rawDescGZIP(), []int{0}
}

func (x *CommitRequest) GetBlobDigests() []*v2.Digest {
	if x != nil {
		return x.BlobDigests
	}
	return nil
}

func (x *CommitRequest) GetDigestFunction() v2.DigestFunction_Value {
	if x != nil {
		return x.DigestFunction
	}
	return v2.DigestFunction_Value(0)
}

type CommitResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MissingBlobDigests []*v2.Digest           `protobuf:"bytes,1,rep,name=missing_blob_digests,json=missingBlobDigests,proto3" json:"missing_blob_digests,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CommitResponse) Reset() {
	*x = CommitResponse{}
	mi := &file_pkg_proto_blobcache_blobcache_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitResponse) ProtoMessage() {}

func (x *CommitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_blobcache_blobcache_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitResponse.ProtoReflect.Descriptor instead.
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_blobcache_blobcache_proto_rawDescGZIP(), []int{1}
}

func (x *CommitResponse) GetMissingBlobDigests() []*v2.Digest {
	if x != nil {
		return x.MissingBlobDigests
	}
	return nil
}

var File_pkg_proto_blobcache_blobcache_proto protoreflect.FileDescriptor

const file_pkg_proto_blobcache_blobcache_proto_rawDesc = "" +
	"\n" +
	"#pkg/proto/blobcache/blobcache.proto\x12\x13pkg.proto.blobcache\x1a6build/bazel/remote/execution/v2/remote_execution.proto\"\xbb\x01\n" +
	"\rCommitRequest\x12J\n" +
	"\fblob_digests\x18\x01 \x03(\v2'.build.bazel.remote.execution.v2.DigestR\vblobDigests\x12^\n" +
	"\x0fdigest_function\x18\x02 \x01(\x0e25.build.bazel.remote.execution.v2.DigestFunction.ValueR\x0edigestFunction\"k\n" +
	"\x0eCommitResponse\x12Y\n" +
	"\x14missing_blob_digests\x18\x01 \x03(\v2'.build.bazel.remote.execution.v2.DigestR\x12missingBlobDigests2\\\n" +
	"\x05Blobs\x12S\n" +
	"\x06Commit\x12\".pkg.proto.blobcache.CommitRequest\x1a#.pkg.proto.blobcache.CommitResponse\"\x00BBZ@github.com/bazel-contrib/rules_img/pkg/proto/blobcache;blobcacheb\x06proto3"

var (
	file_pkg_proto_blobcache_blobcache_proto_rawDescOnce sync.Once
	file_pkg_proto_blobcache_blobcache_proto_rawDescData []byte
)

func file_pkg_proto_blobcache_blobcache_proto_rawDescGZIP() []byte {
	file_pkg_proto_blobcache_blobcache_proto_rawDescOnce.Do(func() {
		file_pkg_proto_blobcache_blobcache_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_blobcache_blobcache_proto_rawDesc), len(file_pkg_proto_blobcache_blobcache_proto_rawDesc)))
	})
	return file_pkg_proto_blobcache_blobcache_proto_rawDescData
}

var file_pkg_proto_blobcache_blobcache_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_proto_blobcache_blobcache_proto_goTypes = []any{
	(*CommitRequest)(nil),        // 0: pkg.proto.blobcache.CommitRequest
	(*CommitResponse)(nil),       // 1: pkg.proto.blobcache.CommitResponse
	(*v2.Digest)(nil),            // 2: build.bazel.remote.execution.v2.Digest
	(v2.DigestFunction_Value)(0), // 3: build.bazel.remote.execution.v2.DigestFunction.Value
}
var file_pkg_proto_blobcache_blobcache_proto_depIdxs = []int32{
	2, // 0: pkg.proto.blobcache.CommitRequest.blob_digests:type_name -> build.bazel.remote.execution.v2.Digest
	3, // 1: pkg.proto.blobcache.CommitRequest.digest_function:type_name -> build.bazel.remote.execution.v2.DigestFunction.Value
	2, // 2: pkg.proto.blobcache.CommitResponse.missing_blob_digests:type_name -> build.bazel.remote.execution.v2.Digest
	0, // 3: pkg.proto.blobcache.Blobs.Commit:input_type -> pkg.proto.blobcache.CommitRequest
	1, // 4: pkg.proto.blobcache.Blobs.Commit:output_type -> pkg.proto.blobcache.CommitResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_proto_blobcache_blobcache_proto_init() }
func file_pkg_proto_blobcache_blobcache_proto_init() {
	if File_pkg_proto_blobcache_blobcache_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_blobcache_blobcache_proto_rawDesc), len(file_pkg_proto_blobcache_blobcache_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_blobcache_blobcache_proto_goTypes,
		DependencyIndexes: file_pkg_proto_blobcache_blobcache_proto_depIdxs,
		MessageInfos:      file_pkg_proto_blobcache_blobcache_proto_msgTypes,
	}.Build()
	File_pkg_proto_blobcache_blobcache_proto = out.File
	file_pkg_proto_blobcache_blobcache_proto_goTypes = nil
	file_pkg_proto_blobcache_blobcache_proto_depIdxs = nil
}
