load("@rules_img//img:image.bzl", "image_index", "image_manifest")
load("@rules_img//img:layer.bzl", "image_layer", "layer_from_tar")
load("@rules_img//img:push.bzl", "image_push")
load("@rules_oci//oci:defs.bzl", "oci_image")
load("//:build_tree.bzl", "build_tree")

build_tree(
    name = "tree",
    size = 512,
    dirs = [
        "a/b/c",
        "x/y",
    ],
    names = [
        "foo",
        "bar",
        "a/b/c/leaf",
        "x/leaf",
    ],
)

build_tree(
    name = "large_tree",
    size = 512 * 128,
    names = ["large_file_%s" % i for i in range(256)],
)

filegroup(
    name = "log",
    srcs = glob(["*.txt"]),
)

oci_image(
    name = "oci_ubuntu_no_op",
    base = "@ubuntu_rules_oci",
    entrypoint = ["/fail"],
    tags = ["manual"],
)

image_manifest(
    name = "ubuntu_no_op",
    architecture = "amd64",
    base = "@ubuntu",
    layers = [],
    os = "linux",
)

oci_image(
    name = "oci_cuda_no_op",
    base = "@cuda_rules_oci",
    entrypoint = ["/fail"],
    tags = ["manual"],
)

image_manifest(
    name = "cuda_no_op",
    architecture = "amd64",
    base = "@cuda",
    layers = [],
    os = "linux",
)

image_layer(
    name = "img_layer",
    srcs = {"usr/bin/img": "@rules_img//cmd/img"},
)

image_layer(
    name = "my_layer",
    srcs = {
        "usr/bin/img": "@rules_img//cmd/img",
        "var/hello.txt": ":hello.txt",
        "var/log": ":log",
        "var/tree_a": ":tree",
        "var/tree_b": ":tree",
        "var/large_tree": ":large_tree",
    },
    symlinks = {
        "a": "b",
    },
)

layer_from_tar(
    name = "my_layer_from_tar",
    src = "@test_archive//file",
    compress = "gzip",
)

image_manifest(
    name = "my_image",
    base = "@ubuntu",
    layers = [
        ":img_layer",
        ":my_layer",
    ],
    os = "linux",
)

image_manifest(
    name = "my_second_image",
    architecture = "amd64",
    base = "@cuda",
    layers = [
        ":img_layer",
        ":my_layer",
    ],
    os = "linux",
)

image_index(
    name = "my_index",
    annotations = {"foo": "bar"},
    manifests = [":my_image"],
    platforms = [
        "//:linux_amd64",
        "//:linux_arm64",
    ],
)

image_manifest(
    name = "cc_image",
    base = ":my_index",
    layers = ["//examples/src/cc"],
)

image_index(
    name = "cc_index",
    manifests = [":cc_image"],
    platforms = [
        "//:linux_amd64",
        "//:linux_arm64",
    ],
)

image_manifest(
    name = "some_extra_image",
    base = "cc_index",
)

image_index(
    name = "some_extra_index",
    manifests = [":some_extra_image"],
    platforms = [
        "//:linux_amd64",
        "//:linux_arm64",
    ],
)

image_push(
    name = "my_push",
    image = ":some_extra_index",
    registry = "ghcr.io",
    repository = "malt3/ubuntu",
    tag = "latest",
)

image_push(
    name = "cuda_push",
    image = ":cuda_no_op",
    registry = "ghcr.io",
    repository = "malt3/cuda",
    tag = "latest",
    tags = ["manual"],
)
