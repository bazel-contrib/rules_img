module(name = "cc_e2e")

# BEGIN BAZEL_DEP
bazel_dep(name = "rules_img")
local_path_override(
    module_name = "rules_img",
    path = "../..",
)

bazel_dep(name = "rules_img_pull_tool")
local_path_override(
    module_name = "rules_img_pull_tool",
    path = "../../pull_tool",
)

bazel_dep(name = "rules_img_tool")
local_path_override(
    module_name = "rules_img_tool",
    path = "../../img_tool",
)

register_toolchains("@rules_img_tool//toolchain:all")
# END BAZEL_DEP

bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "platforms", version = "0.0.11")

bazel_dep(name = "rules_cc", version = "0.2.13", dev_dependency = True)

# All of the hermetic C++ toolchain setup is done in a separate MODULE.bazel file.
# This setup is not important for the e2e tests and it is hard to read.
include("//:toolchain.MODULE.bazel")

pull = use_repo_rule("@rules_img//img:pull.bzl", "pull")

pull(
    name = "distroless_cc",
    digest = "sha256:189bd2ce1f7750193c2c10220d9201ba38c11e30fbb75b036606829fadbc81b1",
    registry = "gcr.io",
    repository = "distroless/cc-debian12",
    tag = "nonroot",
)
