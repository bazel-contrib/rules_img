module(name = "python_e2e")

# BEGIN BAZEL_DEP
bazel_dep(name = "rules_img")
local_path_override(
    module_name = "rules_img",
    path = "../..",
)

bazel_dep(name = "rules_img_pull_tool")
local_path_override(
    module_name = "rules_img_pull_tool",
    path = "../../pull_tool",
)

bazel_dep(name = "rules_img_tool")
local_path_override(
    module_name = "rules_img_tool",
    path = "../../img_tool",
)

register_toolchains("@rules_img_tool//toolchain:all")
# END BAZEL_DEP

bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "aspect_bazel_lib", version = "2.21.2")
bazel_dep(name = "aspect_rules_py", version = "1.6.4")
bazel_dep(name = "bazel_skylib", version = "1.8.1")
bazel_dep(name = "platforms", version = "0.0.11")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.13",
)
use_repo(python, "python_3_13")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    download_only = True,
    hub_name = "pip",
    python_version = "3.13",
    requirements_lock = "//requirements:requirements_lock.txt",
)
use_repo(pip, "pip")

pull = use_repo_rule("@rules_img//img:pull.bzl", "pull")

pull(
    name = "ubuntu",
    digest = "sha256:66460d557b25769b102175144d538d88219c077c678a49af4afca6fbfc1b5252",
    registries = [
        "mirror.gcr.io",
        "index.docker.io",
    ],
    repository = "library/ubuntu",
    tag = "latest",
)
