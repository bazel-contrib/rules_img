module(name = "generic_e2e")

# BEGIN BAZEL_DEP
bazel_dep(name = "rules_img")
local_path_override(
    module_name = "rules_img",
    path = "../..",
)

bazel_dep(name = "rules_img_pull_tool")
local_path_override(
    module_name = "rules_img_pull_tool",
    path = "../../pull_tool",
)

bazel_dep(name = "rules_img_tool")
local_path_override(
    module_name = "rules_img_tool",
    path = "../../img_tool",
)

register_toolchains("@rules_img_tool//toolchain:all")
# END BAZEL_DEP

bazel_dep(name = "aspect_bazel_lib", version = "2.21.2")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "rules_pkg", version = "1.1.0")
bazel_dep(name = "rules_distroless", version = "0.5.3")
single_version_override(
    module_name = "rules_distroless",
    patch_strip = 1,
    patches = ["//custom_distroless_base_image:rules_distroless.patch"],
)

# Configure apt for Debian packages
apt = use_extension("@rules_distroless//apt:extensions.bzl", "apt")

# Configure Debian Bookworm packages
apt.install(
    name = "bookworm",
    lock = "//custom_distroless_base_image:apt.lock.json",
    manifest = "//custom_distroless_base_image:apt.yaml",
)
use_repo(apt, "bookworm")

# Pull Alpine Linux as base image
pull = use_repo_rule("@rules_img//img:pull.bzl", "pull")

pull(
    name = "alpine",
    digest = "sha256:4b7ce07002c69e8f3d704a9c5d6fd3053be500b7f1c69fc0d80990c2ad8dd412",
    registries = [
        "mirror.gcr.io",
        "index.docker.io",
    ],
    repository = "library/alpine",
    tag = "3.22",
)

pull(
    name = "cuda",
    digest = "sha256:198208c45877a84c8fb35a06956e7fbef4ffabfa36f9c82148dc7bac454ba02a",
    registries = [
        "mirror.gcr.io",
        "index.docker.io",
    ],
    repository = "nvidia/cuda",
    tag = "13.0.0-tensorrt-runtime-ubuntu24.04",
)

# note that nginx does not have a tag here, relying solely on the digest
# this is not recommended, since tools like renovate use the tag to determine
# as a starting point for updates
# but it is supported
pull(
    name = "nginx",
    digest = "sha256:2945a0bfa07bf1d3cb9ba5f03678e2827f11c240e4c9d38e075037938310062a",
    registries = [
        "mirror.gcr.io",
        "index.docker.io",
    ],
    repository = "library/nginx",
)

# minimal information:
# Just the digest and the repository.
# This relies on the default registry (index.docker.io) for compatibility with rules_oci.
pull(
    name = "debian",
    digest = "sha256:fd8f5a1df07b5195613e4b9a0b6a947d3772a151b81975db27d47f093f60c6e6",
    repository = "debian",
)
