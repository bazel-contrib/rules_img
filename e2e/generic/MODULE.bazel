module(name = "generic_e2e")

# BEGIN BAZEL_DEP
bazel_dep(name = "rules_img")
local_path_override(
    module_name = "rules_img",
    path = "../..",
)

bazel_dep(name = "rules_img_tool")
local_path_override(
    module_name = "rules_img_tool",
    path = "../../img_tool",
)

register_toolchains("@rules_img_tool//toolchain:all")

bazel_dep(name = "rules_img_pull_tool")
local_path_override(
    module_name = "rules_img_pull_tool",
    path = "../../pull_tool",
)
# END BAZEL_DEP

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_python", version = "1.6.3")
bazel_dep(name = "rules_pkg", version = "1.1.0")

# Pull Alpine Linux as base image
pull = use_repo_rule("@rules_img//img:pull.bzl", "pull")

pull(
    name = "alpine",
    digest = "sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1",
    registry = "index.docker.io",
    repository = "library/alpine",
    tag = "3.22",
)

pull(
    name = "cuda",
    digest = "sha256:198208c45877a84c8fb35a06956e7fbef4ffabfa36f9c82148dc7bac454ba02a",
    registry = "index.docker.io",
    repository = "nvidia/cuda",
    tag = "13.0.0-tensorrt-runtime-ubuntu24.04",
)

# note that nginx does not have a tag here, relying solely on the digest
# this is not recommended, since tools like renovate use the tag to determine
# as a starting point for updates
# but it is supported
pull(
    name = "nginx",
    digest = "sha256:2945a0bfa07bf1d3cb9ba5f03678e2827f11c240e4c9d38e075037938310062a",
    registry = "index.docker.io",
    repository = "library/nginx",
)

# minimal information:
# Just the digest and the repository.
# This relies on the default registry (index.docker.io) for compatibility with rules_oci.
pull(
    name = "debian",
    digest = "sha256:432f545c6ba13b79e2681f4cc4858788b0ab099fc1cca799cc0fae4687c69070",
    repository = "debian",
)
